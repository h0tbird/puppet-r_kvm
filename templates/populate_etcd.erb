#!/bin/bash
#
# This file is generated by Puppet and contains a Ceph cluster configuration.
# The config is pushed to Etcd if it is not already present or has changes.

#------------------------------------------------------------------------------
# Globals:
#------------------------------------------------------------------------------

# Settings:
readonly CLUSTER_NAME='ceph-<%= @fqdn_3 %>'

# Return codes:
readonly E_BAD_CMD=10
readonly E_BAD_HASH=11
readonly E_BAD_SET=11

# Commands:
readonly CMD_MD5SUM=$(type -P md5sum); [ -z "${CMD_MD5SUM}" ] && exit ${E_BAD_CMD}
readonly CMD_CAT=$(type -P cat); [ -z "${CMD_CAT}" ] && exit ${E_BAD_CMD}
readonly CMD_AWK=$(type -P awk); [ -z "${CMD_AWK}" ] && exit ${E_BAD_CMD}
readonly CMD_ETCDCTL=$(type -P etcdctl); [ -z "${CMD_ETCDCTL}" ] && exit ${E_BAD_CMD}

#------------------------------------------------------------------------------
# Compute the hash of this file:
#------------------------------------------------------------------------------

desired_hash=$(${CMD_CAT} $0 | ${CMD_MD5SUM} | ${CMD_AWK} '{ print $1 }')

MSG1="[Populate etcd] Getting the hash of the current Ceph config from Etcd..."
MSG2="[Populate etcd] OK! The hash has been retrieved"
MSG3="[Populate etcd] Ops! Cannot retrieve the current config hash"
echo ${MSG1}; current_hash=$(${CMD_ETCDCTL} get /ceph-config/${CLUSTER_NAME}/config_hash) && \
echo ${MSG2} || { echo ${MSG3}; exit ${E_BAD_HASH}; }

MSG1="[Populate etcd] Checking whether config state is equal to the desired one..."
MSG2="[Populate etcd] Ok! There is no need to push config to etcd"
MSG2="[Populate etcd] Ops! There are pending configuration changes"
echo ${MSG1}; [ "${desired_hash}" == "${current_hash}" ] && echo ${MSG2} && exit 0
echo ${MSG3}

#------------------------------------------------------------------------------
# Push the config to Etcd:
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Set the new configuration hash:
#------------------------------------------------------------------------------

MSG1="[Populate etcd] Updating the configuration hash in etd..."
MSG2="[Populate etcd] Ok! The new hash is ${desired_hash}"
MSG3="[Populate etcd] Ops! Cannot set the new hash value"
echo ${MSG1}; ${CMD_ETCDCTL} set /ceph-config/${CLUSTER_NAME}/config_hash ${desired_hash} && \
echo ${MSG2} || { echo ${MSG3}; exit ${E_BAD_SET}; }
