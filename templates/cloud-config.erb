#cloud-config

hostname: core-<%= @id %>.<%= @domain %>

write_files:

 - path: /etc/systemd/system/docker.service.d/50-docker-opts.conf
   content: |
    [Service]
    Environment='DOCKER_OPTS=--bridge=br0 --insecure-registry=regi01:5000'

 - path: /home/core/.bashrc
   permissions: 0644
   owner: root
   content: |
    [[ $- != *i* ]] && return
    alias ls='ls -hF --color=auto --group-directories-first'
    alias l='ls -l'
    alias ll='ls -la'
    alias grep='grep --color=auto'
    alias dim='docker images'
    alias dps='docker ps'
    alias dip="docker inspect --format '{{ .NetworkSettings.IPAddress }}'"
    alias drm='docker rm $(docker ps -qa)';
    alias drmi='docker rmi $(docker images -f '\''dangling=true'\'' -q)'

 - path: /etc/ssh/sshd_config
   permissions: 0600
   owner: root:root
   content: |
    # Use most defaults for sshd configuration.
    UsePrivilegeSeparation sandbox
    Subsystem sftp internal-sftp
    ClientAliveInterval 180
    UseDNS no
    PermitRootLogin no
    AllowUsers core
    PasswordAuthentication no
    ChallengeResponseAuthentication no
    PermitUserEnvironment yes

coreos:

 units:

  - name: etcd2.service
    command: start

  - name: fleet.service
    command: start

  - name: flanneld.service
    drop-ins:
     - name: 50-network-config.conf
       content: |
        [Service]
        ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{ "Network": "<%= @flannel_config['network'] %>","SubnetLen": <%= @flannel_config['subnetlen'] %>,"SubnetMin": "<%= @flannel_config['subnetmin'] %>","SubnetMax": "<%= @flannel_config['subnetmax'] %>","Backend": {"Type": "<%= @flannel_config['backend']['type'] %>"} }'
    command: start

  - name: home-core-.ssh.mount
    command: start
    content: |
     [Mount]
     What=ssh
     Where=/home/core/.ssh
     Type=9p
     Options=trans=virtio,version=9p2000.L,ro

<% @interfaces.split(',').select { |v| v =~ /^core\d+$/ }.each_with_index do |item, n| -%>
  - name: 00-br<%= n %>.netdev
    runtime: false
    content: |
     [NetDev]
     Name=br<%= n %>
     Kind=bridge

  - name: 01-eth<%= n %>.network
    runtime: false
    content: |
     [Match]
     Name=eth<%= n %>

     [Network]
     Bridge=br<%= n %>

  - name: 02-br<%= n %>.network
    runtime: false
    content: |
     [Match]
     Name=br<%= n %>

     [Network]
     DHCP=v4

<% end -%>
 fleet:
  metadata: "role=<%= @role %><% if @masterid -%>,masterid=<%= @masterid %><% end -%>"

 etcd2:
  name: core-<%= @id %>
  initial-cluster: <% @masters.each do |master| -%><%= master %>=http://<%= master %>:2380,<%= master %>=http://<%= master %>:7001,<% end %>
<% if @masterid -%>
  listen-peer-urls: http://core-<%= @id %>:2380,http://core-<%= @id %>:7001
  listen-client-urls: http://127.0.0.1:2379,http://127.0.0.1:4001,http://core-<%= @id %>:2379,http://core-<%= @id %>:4001
  initial-advertise-peer-urls: http://core-<%= @id %>:2380,http://core-<%= @id %>:7001
  advertise-client-urls: http://core-<%= @id %>:2379,http://core-<%= @id %>:4001
  initial-cluster-state: new
<% else -%>
  listen-client-urls: http://127.0.0.1:2379,http://127.0.0.1:4001
  advertise-client-urls: http://127.0.0.1:2379,http://127.0.0.1:4001
  proxy: on
<% end -%>
